// This is your Prisma schema file, 
// learn more about it in the docs: https://pris.ly/d/prisma-schema 
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  orders    Order[]

  @@map("users")
}

model Product {
  id            String         @id @default(cuid())
  name          String
  description   String?
  price         Float
  createdAt     DateTime       @default(now())
  productOrders ProductOrder[]

  @@map("products")
}

model Order {
  id            String         @id @default(cuid())
  userId        String
  total         Float
  createdAt     DateTime       @default(now())
  orderStatus   OrderStatus    @default(PENDING)
  user          User           @relation(fields: [userId], references: [id])
  productOrders ProductOrder[]

  @@map("orders")
}

model ProductOrder {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@map("product_orders")
}

enum UserRole {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}
